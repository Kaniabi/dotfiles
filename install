#!/bin/zsh

set -e
# setopt xtrace

source $HOME/.dotfiles/dotfiles

# Configure symlink in the home directory
DOTFILES_SYMLINK .zshrc
DOTFILES_SYMLINK .zshrc.local
DOTFILES_SYMLINK .gitconfig.local
DOTFILES_SYMLINK .gitconfig
DOTFILES_SYMLINK .config/starship.toml

# START nala 'replacements for apt'
# if [[ $MACHINE != "Mac" ]]; then
#   INSTALL_CMD nala
#   ALIAS apt "sudo nala"
# fi

START curl 'Download urls'
INSTALL_CMD curl

START git 'Source code versioning'
INSTALL_CMD git

START pyenv
INSTALL_GIT https://github.com/pyenv/pyenv.git $HOME/.pyenv
INSTALL_GIT https://github.com/pyenv/pyenv-virtualenv.git $HOME/.pyenv/plugins/pyenv-virtualenv

START hub 'Improved git CLI'
INSTALL_CMD hub
eval "$(hub alias -s zsh)"

START gh 'GitHub CLI'
INSTALL_CMD gh

START jq 'JSON query tool'
INSTALL_CMD jq

START parallel
INSTALL_CMD parallel

START ag: 'Find in files'
if ( $IS_MAC ); then
  INSTALL_CMD ag the_silver_searcher  
else
  INSTALL_CMD ag silversearcher-ag
fi
ALIAS ag "\ag --hidden"

START unzip 'Extract zip files'
INSTALL_CMD unzip

START wget 'Download files'
INSTALL_CMD wget

START exa 'Colorfull directory list (wip)'
if ( $IS_MAC ); then
  INSTALL_CMD eza
  ALIAS dir "eza -la"
else
  INSTALL_CMD exa
  ALIAS dir "exa -la"
fi

# NOTE: Debian12 have a pretty old neovim.
START neovim 'Text editor'
INSTALL_CMD nvim neovim
ALIAS vim "nvim"
EXPORT EDITOR "nvim"

# TODO: How to install newer version on Debian12?
# apt_install python3-launchpadlib software-properties-common
# sudo add-apt-repository ppa:neovim-ppa/stable -y

# # Plugin manager for zsh (disabled until decide what to do with spaceship and oh-my-zsh)
# export ZPLUG_HOME=$HOME/.local/zplug
# git_install https://github.com/zplug/zplug $ZPLUG_HOME
# SOURCE $ZPLUG_HOME/init.zsh

# TODO: This is failing on Debian12 (remote-machine).
#if (( ! $+commands[locale-gen] ))
#then
#  sudo apt install locales
#  sudo locale-gen en_US.UTF-8
##  echo "LANGUAGE=en_US.UTF-8
##LC_ALL=en_US.UTF-8
##LANGUAGE=en_US.UTF-8" | sudo tee /etc/default/locale
#  echo "locales locales/default_environment_locale select en_US.UTF-8" | sudo debconf-set-selections
#  echo "locales locales/locales_to_be_generated multiselect en_US.UTF-8 UTF-8" | sudo debconf-set-selections
#  sudo dpkg-reconfigure --frontend noninteractive locales
#fi

# WIP: Replacing oh-my-zsh with starship.
# START oh-my-zsh 'Zsh extensions'
# EXPORT ZSH_THEME "kaniabi-mortalscumbag"
# EXPORT ZSH_CUSTOM $HOME/.dotfiles/oh-my-zsh
# EXPORT ZSH_DISABLE_COMPFIX true
# EXPORT ZSH $HOME/.oh-my-zsh
# INSTALL_GIT https://github.com/robbyrussell/oh-my-zsh.git $ZSH
# SOURCE "$ZSH/oh-my-zsh.sh"

# git clone https://github.com/zsh-users/zsh-autosuggestions.git $ZSH_CUSTOM/plugins/zsh-autosuggestions
# git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $ZSH_CUSTOM/plugins/zsh-syntax-highlighting
# git clone https://github.com/zdharma-continuum/fast-syntax-highlighting.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/fast-syntax-highlighting
# [[ ! -d $ZSH_CUSTOM/plugins/zsh-autocomplete ]] && git clone --depth 1 -- https://github.com/marlonrichert/zsh-autocomplete.git $ZSH_CUSTOM/plugins/zsh-autocomplete

START private.env 'Private environment variables from 1Password'
set -a
SOURCE /tmp/.private.env
set +a

START aws 'AWS CLI and friends'
if ( $IS_MAC ); then
  INSTALL_CMD aws awscli
else
  INSTALL_CMD aws "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"
  INSTALL_CMD session-manager-plugin "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb" 
  INSTALL_CMD sam "https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip"
  INSTALL_CMD ecs-cli "https://amazon-ecs-cli.s3.amazonaws.com/ecs-cli-linux-amd64-latest"
fi

if ( $IS_WSL ); then
  START wslu

  # INSTALL wslu
  # sudo apt install gnupg2 apt-transport-https
  # wget -O - https://pkg.wslutiliti.es/public.key | sudo gpg -o /usr/share/keyrings/wslu-archive-keyring.pgp --dearmor
  # echo "deb [signed-by=/usr/share/keyrings/wslu-archive-keyring.pgp] https://pkg.wslutiliti.es/debian bookworm main" | sudo tee -a /etc/apt/sources.list.d/wslu.list
  # sudo apt update
  # sudo apt install wslu
fi


START pyenv
EXPORT PATH "$PATH:$HOME/.pyenv/bin"
if (( ! $+commands[pyenv] )); then
  INSTALL_GIT https://github.com/pyenv/pyenv.git $HOME/.pyenv
  INSTALL_GIT https://github.com/pyenv/pyenv-virtualenv.git $HOME/.pyenv/plugins/pyenv-virtualenv
fi
TEST_CMD pyenv --version
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
TODO Install 'deen' virtualenv if needed.
pyenv shell deen || true

START tfenv
EXPORT PATH "$PATH:$HOME/.tfenv/bin"
if (( ! $+commands[tfenv] )); then
  INSTALL_GIT https://github.com/tfutils/tfenv.git $HOME/.tfenv
fi
TEST_CMD tfenv --version

START pkenv
EXPORT PATH "$PATH:$HOME/.pkenv/bin"
if (( ! $+commands[pkenv] )); then
  INSTALL_GIT https://github.com/iamhsa/pkenv.git $HOME/.pkenv
fi
TEST_CMD pkenv --version

FINISH
